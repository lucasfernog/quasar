{
  "props": {
    "view": {
      "type": "String",
      "desc": "Defines how your layout components (header/footer/drawer) should be placed on screen; See docs examples",
      "default": "hhh lpr fff",
      "examples": [
        "hHh lpR fFf"
      ],
      "category": "content"
    },

    "container": {
      "type": "Boolean",
      "desc": "Containerize the layout which means it changes the default behavior of expanding to the whole window; Useful (but not limited to) for when using on a QDialog",
      "category": "content"
    }
  },

  "slots": {
    "default": {
      "desc": "Suggestion: QHeader, QFooter, QDrawer, QPageContainer"
    }
  },

  "events": {
    "resize": {
      "desc": "Emitted when layout size (height, width) changes",
      "params": {
        "size": {
          "type": "Object",
          "desc": "New size",
          "definition": {
            "height": {
              "type": "Number",
              "desc": "Layout height",
              "examples": [ 575 ]
            },
            "width": {
              "type": "Number",
              "desc": "Layout height",
              "examples": [ 575 ]
            }
          }
        }
      }
    },

    "scroll": {
      "desc": "Emitted when user scrolls within layout",
      "params": {
        "details": {
          "type": "Object",
          "desc": "Scroll details",
          "definition": {
            "position": {
              "type": "Number",
              "desc": "Scroll offset (from top)",
              "examples": [ 575 ]
            },
            "direction": {
              "type": "String",
              "desc": "Direction of scroll",
              "values": [ "up", "down" ]
            },
            "directionChanged": {
              "type": "Boolean",
              "desc": "Has scroll direction changed since event was last emitted?"
            },
            "inflexionPosition": {
              "type": "Number",
              "desc": "Last scroll offset where scroll direction has changed",
              "examples": [ 575 ]
            }
          }
        }
      }
    },

    "scroll-height": {
      "desc": "Emitted when the scroll size of layout changes",
      "params": {
        "height": {
          "type": "Number",
          "desc": "New scroll height of layout",
          "examples": [ 1442 ]
        }
      }
    }
  },
  "css": {
    "layout-shadow": {
      "desc": "QLayout's shadow",
      "type": "Shadow",
      "value": "0 0 10px 2px rgba(0,0,0,0.2), 0 0px 10px rgba(0,0,0,0.24)",
      "category": "Elevation",
      "affects": [{
        "selector": ".q-layout__shadow:after",
        "property": "box-shadow"
      }]
    },
    "primary": {
      "desc": "QHeader's and QFooter's background color",
      "extends": "primary",
      "affects": [{
        "selector": ".q-layout__section--marginal",
        "property": "background-color"
      }]
    },
    "layout-border": {
      "desc": "QHeader's border-bottom, QFooter's border-top, QDrawer's border-[left|right] when using the \"bordered\" prop",
      "type": "border",
      "value": "1px solid $separator-color",
      "affects": [{
        "selector": ".q-header--bordered",
        "property": "borderBottom"
      }, {
        "selector": ".q-footer--bordered",
        "property": "border-top"
      }, {
        "selector": ".q-header--bordered",
        "property": "borderBottom"
      }, {
        "selector": ".q-drawer--left",
        "property": "borderRight"
      }, {
        "selector": ".q-drawer--right",
        "property": "borderLeft"
      }]
    },
    "z-marginals": {
      "desc": "QHeader's, QFooter's and QDrawer's opener z-index",
      "type": "Number",
      "value": 2000,
      "category": "Elevation",
      "affects": [{
        "selector": ".q-header, .q-footer, .q-drawer__opener",
        "property": "z-index"
      }]
    },
    "z-side": {
      "desc": "QDrawer's z-index",
      "type": "Number",
      "value": 1000,
      "category": "Elevation",
      "affects": [{
        "selector": ".q-drawer",
        "property": "z-index"
      }]
    },
    "z-fixed-drawer": {
      "desc": "QDrawer's z-index when on top",
      "type": "Number",
      "value": 3000,
      "category": "Elevation",
      "affects": [{
        "selector": ".q-drawer--on-top",
        "property": "z-index"
      }]
    },
    "ios-statusbar-height": {
      "desc": "QDrawer's padding top when using a header slot and QHeader's padding top",
      "extends": "ios-statusbar-height",
      "affects": [{
        "selector": "body.q-ios-padding .q-layout--standard .q-header > .q-toolbar:nth-child(2), body.q-ios-padding .q-layout--standard.q-header > .q-tabs:nth - child(2).q-tabs-head, body.q-ios-padding .q-layout--standard.q-drawer--top-padding.q-drawer__content",
        "property": "padding-top"
      }]
    },
    "toolbar-min-height": {
      "desc": "",
      "type": "Size",
      "value": {
        "size": 50,
        "unit": "px"
      },
      "affects": [{
        "selector": "",
        "property": ""
      }]
    },
    "separator-dark-color": {
      "desc": "QHeader's, QFooter's and QDrawer's border color when using the \"dark\" prop",
      "extends": "separator-dark-color",
      "affects": [{
        "selector": "body.body--dark .q-header, body.body--dark .q-footer, body.body--dark .q-drawer",
        "property": "border-color"
      }]
    }
  }
}
